# Service account for ingress-nginx
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: ingress-nginx

---
# ClusterRole granting access to cluster-wide resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    kubernetes.courselabs.co: hackathon
rules:
  - apiGroups: ['']
    resources: [configmaps, endpoints, nodes, pods, secrets]
    verbs: [list, watch]
  - apiGroups: ['']
    resources: [nodes]
    verbs: [get]
  - apiGroups: ['']
    resources: [services]
    verbs: [get, list, update, watch]
  - apiGroups: [extensions, networking.k8s.io]
    resources: [ingresses]
    verbs: [get, list, watch]
  - apiGroups: ['']
    resources: [events]
    verbs: [create, patch]
  - apiGroups: [extensions, networking.k8s.io]
    resources: [ingresses/status]
    verbs: [update]
  - apiGroups: [networking.k8s.io]
    resources: [ingressclasses]
    verbs: [get, list, watch]

---
# Bind ClusterRole to ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    kubernetes.courselabs.co: hackathon
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx

---
# Role for namespace-scoped permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
rules:
  - apiGroups: ['']
    resources: [namespaces]
    verbs: [get]
  - apiGroups: ['']
    resources: [configmaps, pods, secrets, endpoints]
    verbs: [get, list, watch]
  - apiGroups: ['']
    resources: [services]
    verbs: [get, list, update, watch]
  - apiGroups: [extensions, networking.k8s.io]
    resources: [ingresses]
    verbs: [get, list, watch]
  - apiGroups: [extensions, networking.k8s.io]
    resources: [ingresses/status]
    verbs: [update]
  - apiGroups: [networking.k8s.io]
    resources: [ingressclasses]
    verbs: [get, list, watch]
  - apiGroups: ['']
    resources: [configmaps]
    verbs: [get, update, create]
  - apiGroups: ['']
    resources: [endpoints]
    verbs: [create, get, update]
  - apiGroups: ['']
    resources: [events]
    verbs: [create, patch]

---
# Bind Role to ServiceAccount in the same namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
